{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/newMessage.js\",\n    _s = $RefreshSig$();\n\nimport \"./newMessage_style.css\";\nimport { useState } from \"react\"; //import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMessage(props) {\n  _s();\n\n  const isLoggedIn = props.isLoggedIn;\n  const [message, setMessage] = useState(\"\");\n  const [img, setImg] = useState(\"\"); //const token = useContext(UlogCtx);\n\n  const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n\n  function handleMessage() {\n    //console.log({message});\n    //console.log(\"img = \", img);\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"POST\",\n      // withCredentials: true,\n      // credentials: 'include',\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: message\n      }) // body: {\n      //    message: JSON.stringify({message}),\n      //    //imageUrl: img         \n      // }\n\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      console.log(res.message);\n      window.location = \"/\";\n    }).catch(error => console.log(\"error = \", error));\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nouveau message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"12\",\n        cols: \"80\",\n        onChange: e => {\n          setMessage(e.target.value);\n        },\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-hud\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => {\n            console.log(\"target = \", e.target.files[0]);\n            setImg(e.target.files[0].File.name);\n            console.log(\"img = \", img);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleMessage,\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Vous de devez vous connecter pour envoyer un message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(NewMessage, \"ayG6sl0jwGfw5zNFWtTxY4BDbd4=\");\n\n_c = NewMessage;\nexport default NewMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["useState","NewMessage","props","isLoggedIn","message","setMessage","img","setImg","token","JSON","parse","localStorage","getItem","handleMessage","fetch","method","headers","body","stringify","then","jsonResponse","json","res","console","log","window","location","catch","error","e","target","value","files","File","name"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/newMessage.js"],"sourcesContent":["import \"./newMessage_style.css\";\nimport {useState} from \"react\";\n//import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n\nfunction NewMessage(props){\n    const isLoggedIn = props.isLoggedIn;\n    const [message, setMessage] = useState(\"\");\n    const [img, setImg] = useState(\"\");\n    //const token = useContext(UlogCtx);\n\n    const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n\n    function handleMessage(){\n        //console.log({message});\n        //console.log(\"img = \", img);\n        fetch(\"http://localhost:5000/api/posts\",{\n            method: \"POST\",\n            // withCredentials: true,\n            // credentials: 'include',\n            headers: {\n\n                \"Authorization\":\"Bearer \"+token,\n                \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify({message:message})\n            // body: {\n            //    message: JSON.stringify({message}),\n            //    //imageUrl: img         \n            // }\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            console.log(res.message)\n            window.location = \"/\";\n        })\n        .catch(error => console.log(\"error = \", error));\n\n    }\n\n    if(isLoggedIn){\n        return(\n            <div>\n                <h2>Nouveau message</h2>\n                <textarea \n                    rows=\"12\" \n                    cols=\"80\" \n                    onChange={(e)=> {setMessage(e.target.value)}}\n                    value={message}\n                    >\n                    \n                </textarea>\n                <div className=\"message-hud\">\n                    <input type=\"file\"\n                    onChange={(e)=>{\n                        console.log(\"target = \", e.target.files[0]);\n                        setImg(e.target.files[0].File.name);\n                        console.log(\"img = \", img)\n                    }}\n                    ></input>\n                    <button type=\"button\" onClick={handleMessage}>Envoyer</button>\n                </div>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>Vous de devez vous connecter pour envoyer un message</div>\n        )\n    }\n}\n\nexport default NewMessage;"],"mappings":";;;AAAA,OAAO,wBAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB,C,CACA;AACA;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAA;;EACtB,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B,CAHsB,CAItB;;EAEA,MAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAd;;EAEA,SAASC,aAAT,GAAwB;IACpB;IACA;IACAC,KAAK,CAAC,iCAAD,EAAmC;MACpCC,MAAM,EAAE,MAD4B;MAEpC;MACA;MACAC,OAAO,EAAE;QAEL,iBAAgB,YAAUR,KAFrB;QAGL,gBAAe;MAHV,CAJ2B;MASpCS,IAAI,EAAER,IAAI,CAACS,SAAL,CAAe;QAACd,OAAO,EAACA;MAAT,CAAf,CAT8B,CAUpC;MACA;MACA;MACA;;IAboC,CAAnC,CAAL,CAeCe,IAfD,CAeMC,YAAY,IAAIA,YAAY,CAACC,IAAb,EAftB,EAgBCF,IAhBD,CAgBOG,GAAD,IAAO;MACTC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAClB,OAAhB;MACAqB,MAAM,CAACC,QAAP,GAAkB,GAAlB;IACH,CAnBD,EAoBCC,KApBD,CAoBOC,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,KAAxB,CApBhB;EAsBH;;EAED,IAAGzB,UAAH,EAAc;IACV,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,IAAI,EAAC,IADT;QAEI,IAAI,EAAC,IAFT;QAGI,QAAQ,EAAG0B,CAAD,IAAM;UAACxB,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;QAA2B,CAHhD;QAII,KAAK,EAAE3B;MAJX;QAAA;QAAA;QAAA;MAAA,QAFJ,eAUI;QAAK,SAAS,EAAC,aAAf;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UACA,QAAQ,EAAGyB,CAAD,IAAK;YACXN,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAzB;YACAzB,MAAM,CAACsB,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,EAAkBC,IAAlB,CAAuBC,IAAxB,CAAN;YACAX,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBlB,GAAtB;UACH;QALD;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEO,aAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAuBH,CAxBD,MAyBI;IACA,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ;;GAjEQZ,U;;KAAAA,U;AAmET,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}