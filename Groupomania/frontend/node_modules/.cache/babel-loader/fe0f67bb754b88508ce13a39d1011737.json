{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/EditPost/editPost.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost() {\n  _s();\n\n  // const url = new URL(window.location.href);\n  // console.log(\"url=\"+url);\n  // const id = url.searchParams.get(\"id\");\n  // console.log(\"id=\"+id);\n  const [message, setMessage] = useState(\"\");\n  const [img, setImg] = useState(null); // const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n  // console.log(\"token = \"+token);\n\n  function handleEditedMessage() {\n    /* get id from url */\n    const url = window.location.href;\n    console.log(\"url=\" + url);\n    const urlstr = url.split(\"/\");\n    const id = urlstr.at(-1);\n    console.log(\"id=\" + id);\n    /* get token from storage */\n\n    const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n    console.log(\"token = \" + token);\n    /* get data for PUT */\n\n    const postObject = {\n      message: message\n    };\n    const formdata = new FormData();\n    formdata.append(\"post\", JSON.stringify(postObject));\n    formdata.append(\"image\", img);\n    fetch(\"http://localhost:5000/api/posts/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token //\"Content-Type\":\"application/json\"\n\n      },\n      //body: JSON.stringify({message})\n      body: formdata\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      console.log(res.message);\n      window.location = \"/\";\n    }).catch(error => console.log(\"error = \", error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editer votre message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"12\",\n        cols: \"80\",\n        onChange: e => setMessage(e.target.value),\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: e => {\n          setImg(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEditedMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditPost, \"TsoOKgIWi2yxwrDWUBBNIUkoYnk=\");\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useState","EditPost","message","setMessage","img","setImg","handleEditedMessage","url","window","location","href","console","log","urlstr","split","id","at","token","JSON","parse","localStorage","getItem","postObject","formdata","FormData","append","stringify","fetch","method","headers","body","then","jsonResponse","json","res","catch","error","e","target","value","files"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/EditPost/editPost.js"],"sourcesContent":["import {useState} from \"react\";\n\nfunction EditPost(){\n\n    // const url = new URL(window.location.href);\n    // console.log(\"url=\"+url);\n    // const id = url.searchParams.get(\"id\");\n    // console.log(\"id=\"+id);\n    const [message, setMessage] = useState(\"\");\n    const [img, setImg] = useState(null);\n    // const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n    // console.log(\"token = \"+token);\n\n    function handleEditedMessage(){\n        \n        /* get id from url */\n        const url = window.location.href;\n        console.log(\"url=\"+url);\n        const urlstr = url.split(\"/\");\n        const id = urlstr.at(-1);\n        console.log(\"id=\"+id);\n        \n        /* get token from storage */\n        const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n        console.log(\"token = \"+token);\n\n        /* get data for PUT */\n        const postObject = {\n            message: message\n        }\n        const formdata = new FormData();\n        formdata.append(\"post\", JSON.stringify(postObject));\n        formdata.append(\"image\", img);\n        \n        fetch(\"http://localhost:5000/api/posts/\"+id,{\n            method: \"PUT\",\n\n            headers:{\n                \"Authorization\":\"Bearer \"+token,\n                //\"Content-Type\":\"application/json\"\n            },\n            //body: JSON.stringify({message})\n            body:formdata\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            console.log(res.message)\n            window.location= \"/\";\n        })\n        .catch(error => console.log(\"error = \", error));\n\n    }\n\n\n    return(\n        <div>\n        <h1>Editer votre message</h1>\n        <div>\n            <textarea \n                rows=\"12\" \n                cols=\"80\"\n                onChange={(e)=> setMessage(e.target.value)}\n                value={message}\n                >\n            </textarea>\n            <input \n                type=\"file\"\n                name=\"image\"\n                onChange={(e)=>{\n                    setImg(e.target.files[0]);\n                }}\n                > \n            </input>\n        </div>\n        <div>\n            <button type=\"button\" onClick={handleEditedMessage}>Envoyer</button>\n        </div>\n        </div>\n    )\n}\n\nexport default EditPost;"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EAEf;EACA;EACA;EACA;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,IAAD,CAA9B,CAPe,CAQf;EACA;;EAEA,SAASM,mBAAT,GAA8B;IAE1B;IACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;IACAC,OAAO,CAACC,GAAR,CAAY,SAAOL,GAAnB;IACA,MAAMM,MAAM,GAAGN,GAAG,CAACO,KAAJ,CAAU,GAAV,CAAf;IACA,MAAMC,EAAE,GAAGF,MAAM,CAACG,EAAP,CAAU,CAAC,CAAX,CAAX;IACAL,OAAO,CAACC,GAAR,CAAY,QAAMG,EAAlB;IAEA;;IACA,MAAME,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAd;IACAV,OAAO,CAACC,GAAR,CAAY,aAAWK,KAAvB;IAEA;;IACA,MAAMK,UAAU,GAAG;MACfpB,OAAO,EAAEA;IADM,CAAnB;IAGA,MAAMqB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBP,IAAI,CAACQ,SAAL,CAAeJ,UAAf,CAAxB;IACAC,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBrB,GAAzB;IAEAuB,KAAK,CAAC,qCAAmCZ,EAApC,EAAuC;MACxCa,MAAM,EAAE,KADgC;MAGxCC,OAAO,EAAC;QACJ,iBAAgB,YAAUZ,KADtB,CAEJ;;MAFI,CAHgC;MAOxC;MACAa,IAAI,EAACP;IARmC,CAAvC,CAAL,CAUCQ,IAVD,CAUMC,YAAY,IAAIA,YAAY,CAACC,IAAb,EAVtB,EAWCF,IAXD,CAWOG,GAAD,IAAO;MACTvB,OAAO,CAACC,GAAR,CAAYsB,GAAG,CAAChC,OAAhB;MACAM,MAAM,CAACC,QAAP,GAAiB,GAAjB;IACH,CAdD,EAeC0B,KAfD,CAeOC,KAAK,IAAIzB,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBwB,KAAxB,CAfhB;EAiBH;;EAGD,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,wBACI;QACI,IAAI,EAAC,IADT;QAEI,IAAI,EAAC,IAFT;QAGI,QAAQ,EAAGC,CAAD,IAAMlC,UAAU,CAACkC,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;QAII,KAAK,EAAErC;MAJX;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QACI,IAAI,EAAC,MADT;QAEI,IAAI,EAAC,OAFT;QAGI,QAAQ,EAAGmC,CAAD,IAAK;UACXhC,MAAM,CAACgC,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAN;QACH;MALL;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAmBA;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAElC,mBAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAnBA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH;;GA7EQL,Q;;KAAAA,Q;AA+ET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}