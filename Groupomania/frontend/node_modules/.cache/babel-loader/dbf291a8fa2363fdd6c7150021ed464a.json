{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/EditPost/editPost.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [img, setImg] = useState(null);\n  /* get id from url */\n\n  const url = window.location.href;\n  console.log(\"url=\" + url);\n  const urlstr = url.split(\"/\");\n  const id = urlstr.at(-1);\n  console.log(\"id=\" + id);\n  /* get token from storage */\n\n  const token = JSON.parse(localStorage.getItem(\"mytoken\")); //console.log(\"token = \"+token);\n\n  function handleEditedMessage() {\n    // /* get id from url */\n    // const url = window.location.href;\n    // console.log(\"url=\"+url);\n    // const urlstr = url.split(\"/\");\n    // const id = urlstr.at(-1);\n    // console.log(\"id=\"+id);\n    // /* get token from storage */\n    // const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n    // console.log(\"token = \"+token);\n\n    /* get data for PUT */\n    let formdata = new FormData();\n    let postObject;\n\n    if (img !== null) {\n      postObject = {\n        message: message\n      };\n      formdata.append(\"post\", JSON.stringify(postObject));\n      formdata.append(\"image\", img);\n    } else {\n      postObject = {\n        message: message,\n        imageUrl: \"\"\n      };\n      formdata.append(\"post\", JSON.stringify(postObject));\n    }\n\n    fetch(\"http://localhost:5000/api/posts/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token //\"Content-Type\":\"application/json\"\n\n      },\n      //body: JSON.stringify({message})\n      body: formdata\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      console.log(res.message);\n      window.location = \"/\";\n    }).catch(error => console.log(\"error = \", error));\n  }\n\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    getEditedPost();\n  }, []);\n\n  function getEditedPost() {\n    fetch(\"http://localhost:5000/api/posts/\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(data);\n      setPost(data); //isDataLoaded = true;\n      //console.log(`data loaded = ${isDataLoaded}`)\n      //message = post.message;\n    }).catch(error => console.log(\"error = \", error));\n  } //Does useEffect run after every render? Yes! \n  //By default, it runs both after the first render and after every update\n  //https://reactjs.org/docs/hooks-effect.html\n  // useEffect(()=>{\n  //     getEditedPost();\n  // },[]); //the array arg at the end is to make run only once !!\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editer votre message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"12\",\n        cols: \"80\",\n        onChange: e => setMessage(e.target.value) //value={post?.message || \"not loaded yet\"}\n        ,\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: e => {\n          setImg(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleEditedMessage,\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditPost, \"fsffiPCWfba38+ovSBQZBelmwi0=\");\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useState","useEffect","EditPost","message","setMessage","img","setImg","url","window","location","href","console","log","urlstr","split","id","at","token","JSON","parse","localStorage","getItem","handleEditedMessage","formdata","FormData","postObject","append","stringify","imageUrl","fetch","method","headers","body","then","jsonResponse","json","res","catch","error","post","setPost","getEditedPost","ok","data","e","target","value","files"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/EditPost/editPost.js"],"sourcesContent":["import {useState} from \"react\";\nimport {useEffect} from \"react\";\n\nfunction EditPost(){\n\n   \n    const [message, setMessage] = useState(\"\");\n    const [img, setImg] = useState(null);\n    \n    /* get id from url */\n    const url = window.location.href;\n    console.log(\"url=\"+url);\n    const urlstr = url.split(\"/\");\n    const id = urlstr.at(-1);\n    console.log(\"id=\"+id);\n    \n    /* get token from storage */\n    const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n    //console.log(\"token = \"+token);\n\n\n    function handleEditedMessage(){\n        \n        // /* get id from url */\n        // const url = window.location.href;\n        // console.log(\"url=\"+url);\n        // const urlstr = url.split(\"/\");\n        // const id = urlstr.at(-1);\n        // console.log(\"id=\"+id);\n        \n        // /* get token from storage */\n        // const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n        // console.log(\"token = \"+token);\n\n        /* get data for PUT */\n        \n        let formdata = new FormData();\n        let postObject;\n\n        if(img !==null){\n            postObject = {\n                message:message\n            }\n            formdata.append(\"post\", JSON.stringify(postObject));\n            formdata.append(\"image\", img);\n        }\n        else{\n            postObject = {\n                message:message,\n                imageUrl:\"\"\n            }\n            formdata.append(\"post\", JSON.stringify(postObject));\n        }\n        \n       \n        fetch(\"http://localhost:5000/api/posts/\"+id,{\n            method: \"PUT\",\n\n            headers:{\n                \"Authorization\":\"Bearer \"+token,\n                //\"Content-Type\":\"application/json\"\n            },\n            //body: JSON.stringify({message})\n            body:formdata\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            console.log(res.message)\n            \n            window.location= \"/\";\n        })\n       \n        .catch(error => console.log(\"error = \", error));\n\n    }\n\n    const [post, setPost] = useState(null);\n\n    useEffect(()=>{\n        getEditedPost();\n    },[]);\n    \n    function getEditedPost(){\n        fetch(\"http://localhost:5000/api/posts/\"+id,{\n            method: \"GET\",\n\n            headers:{\n                \"Authorization\":\"Bearer \"+token,\n                \"Content-Type\":\"application/json\"\n            }\n        })\n        .then((res)=>{\n            if(res.ok){\n                return res.json();\n            }\n        })\n        .then((data)=>{\n            console.log(data);\n            setPost(data);\n            //isDataLoaded = true;\n            //console.log(`data loaded = ${isDataLoaded}`)\n            //message = post.message;\n        })\n        .catch(error => console.log(\"error = \", error));\n    }\n\n    //Does useEffect run after every render? Yes! \n    //By default, it runs both after the first render and after every update\n    //https://reactjs.org/docs/hooks-effect.html\n\n    // useEffect(()=>{\n    //     getEditedPost();\n    // },[]); //the array arg at the end is to make run only once !!\n  \n    \n\n    \n\n    return(\n        <div>\n        <h1>Editer votre message</h1>\n        <div>\n            \n                   <textarea \n                   rows=\"12\" \n                   cols=\"80\"\n                   onChange={(e)=> setMessage(e.target.value)}\n                   //value={post?.message || \"not loaded yet\"}\n                   value=\"\"\n                   >\n               </textarea>\n            \n            \n         \n            <p>{post.message}</p>\n            <input \n                type=\"file\"\n                name=\"image\"\n                onChange={(e)=>{\n                    setImg(e.target.files[0]);\n                }}\n                > \n            </input>\n        </div>\n        <div>\n            <button type=\"button\" onClick={handleEditedMessage}>Envoyer</button>\n        </div>\n        </div>\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}