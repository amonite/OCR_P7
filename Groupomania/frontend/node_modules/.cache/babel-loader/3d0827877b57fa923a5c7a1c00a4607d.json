{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/newMessage.js\",\n    _s = $RefreshSig$();\n\nimport \"./newMessage_style.css\";\nimport { useState } from \"react\"; //import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMessage(props) {\n  _s();\n\n  const isLoggedIn = props.isLoggedIn;\n  const [message, setMessage] = useState(\"\");\n  const [img, setImg] = useState(null); //const token = useContext(UlogCtx);\n\n  const token = JSON.parse(localStorage.getItem(\"mytoken\")); //const formData = document.getElementById(\"imgForm\");\n\n  function handleMessage() {\n    //console.log({message});\n    //console.log(\"img = \", img);\n    // let data = new FormData();\n    // data.append(\"message\",message);\n    // data.append(\"imageUrl\",img);\n    // console.log(\"data = \", data);\n    // let data = {\n    //     message:message\n    // }\n    // let myjson = JSON.stringify(data)\n    // console.log(\"myjson = \"+ myjson);\n    // let testParse = JSON.parse(myjson)\n    // console.log(\"test parse = \", testParse);\n    console.log(\"img depuis handleMessage = \", img);\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      //body:myjson\n      //body: JSON.stringify(data)\n      //body: JSON.stringify({message:message})\n      body: JSON.stringify({\n        message: message,\n        imageUrl: img\n      }) //body: data\n\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      console.log(res.message);\n      window.location = \"/\";\n    }).catch(error => console.log(\"error = \", error));\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nouveau message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"imgForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"12\",\n          cols: \"80\",\n          onChange: e => {\n            setMessage(e.target.value);\n          },\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-hud\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              console.log(\"target = \", e.target.files[0]);\n              setImg(e.target.files[0]);\n              setTimeout(function () {\n                console.log(\"img = \", img);\n              }, 1000);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleMessage,\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Vous de devez vous connecter pour envoyer un message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(NewMessage, \"TsoOKgIWi2yxwrDWUBBNIUkoYnk=\");\n\n_c = NewMessage;\nexport default NewMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["useState","NewMessage","props","isLoggedIn","message","setMessage","img","setImg","token","JSON","parse","localStorage","getItem","handleMessage","console","log","fetch","method","headers","body","stringify","imageUrl","then","jsonResponse","json","res","window","location","catch","error","e","target","value","files","setTimeout"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/newMessage.js"],"sourcesContent":["import \"./newMessage_style.css\";\nimport {useState} from \"react\";\n//import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n\nfunction NewMessage(props){\n    const isLoggedIn = props.isLoggedIn;\n    const [message, setMessage] = useState(\"\");\n    const [img, setImg] = useState(null);\n    //const token = useContext(UlogCtx);\n\n    const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n\n    //const formData = document.getElementById(\"imgForm\");\n\n    function handleMessage(){\n        //console.log({message});\n        //console.log(\"img = \", img);\n    \n        // let data = new FormData();\n        // data.append(\"message\",message);\n        // data.append(\"imageUrl\",img);\n        // console.log(\"data = \", data);\n        // let data = {\n        //     message:message\n        // }\n        // let myjson = JSON.stringify(data)\n        // console.log(\"myjson = \"+ myjson);\n        // let testParse = JSON.parse(myjson)\n        // console.log(\"test parse = \", testParse);\n        console.log(\"img depuis handleMessage = \", img);\n\n        fetch(\"http://localhost:5000/api/posts\",{\n            method: \"POST\",\n            headers: {\n\n                \"Authorization\":\"Bearer \"+token,\n                \"Content-Type\":\"application/json\"\n            },\n            //body:myjson\n            //body: JSON.stringify(data)\n            //body: JSON.stringify({message:message})\n            body: JSON.stringify({message:message, imageUrl:img})\n            //body: data\n\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            console.log(res.message)\n            window.location = \"/\";\n        })\n        .catch(error => console.log(\"error = \", error));\n\n    }\n    \n\n   \n\n    if(isLoggedIn){\n        return(\n            <div>\n                <h2>Nouveau message</h2>\n                <form id=\"imgForm\">\n                    <textarea \n                        rows=\"12\" \n                        cols=\"80\" \n                        onChange={(e)=> {setMessage(e.target.value)}}\n                        value={message}\n                        >\n                        \n                    </textarea>\n                    <div className=\"message-hud\">\n                        \n                            <input type=\"file\"\n                            onChange={(e)=>{\n                                console.log(\"target = \", e.target.files[0]);\n                                setImg(e.target.files[0]);\n                                setTimeout(function(){console.log(\"img = \", img)}, 1000); \n                            }}\n                            ></input>\n                        \n                        <button type=\"button\" onClick={handleMessage}>Envoyer</button>\n                        \n                    </div>\n                </form>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>Vous de devez vous connecter pour envoyer un message</div>\n        )\n    }\n}\n\nexport default NewMessage;"],"mappings":";;;AAAA,OAAO,wBAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB,C,CACA;AACA;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAA;;EACtB,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B,CAHsB,CAItB;;EAEA,MAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAd,CANsB,CAQtB;;EAEA,SAASC,aAAT,GAAwB;IACpB;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CT,GAA3C;IAEAU,KAAK,CAAC,iCAAD,EAAmC;MACpCC,MAAM,EAAE,MAD4B;MAEpCC,OAAO,EAAE;QAEL,iBAAgB,YAAUV,KAFrB;QAGL,gBAAe;MAHV,CAF2B;MAOpC;MACA;MACA;MACAW,IAAI,EAAEV,IAAI,CAACW,SAAL,CAAe;QAAChB,OAAO,EAACA,OAAT;QAAkBiB,QAAQ,EAACf;MAA3B,CAAf,CAV8B,CAWpC;;IAXoC,CAAnC,CAAL,CAcCgB,IAdD,CAcMC,YAAY,IAAIA,YAAY,CAACC,IAAb,EAdtB,EAeCF,IAfD,CAeOG,GAAD,IAAO;MACTX,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACrB,OAAhB;MACAsB,MAAM,CAACC,QAAP,GAAkB,GAAlB;IACH,CAlBD,EAmBCC,KAnBD,CAmBOC,KAAK,IAAIf,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBc,KAAxB,CAnBhB;EAqBH;;EAKD,IAAG1B,UAAH,EAAc;IACV,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,EAAE,EAAC,SAAT;QAAA,wBACI;UACI,IAAI,EAAC,IADT;UAEI,IAAI,EAAC,IAFT;UAGI,QAAQ,EAAG2B,CAAD,IAAM;YAACzB,UAAU,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;UAA2B,CAHhD;UAII,KAAK,EAAE5B;QAJX;UAAA;UAAA;UAAA;QAAA,QADJ,eASI;UAAK,SAAS,EAAC,aAAf;UAAA,wBAEQ;YAAO,IAAI,EAAC,MAAZ;YACA,QAAQ,EAAG0B,CAAD,IAAK;cACXhB,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBe,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAzB;cACA1B,MAAM,CAACuB,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAN;cACAC,UAAU,CAAC,YAAU;gBAACpB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,GAAtB;cAA2B,CAAvC,EAAyC,IAAzC,CAAV;YACH;UALD;YAAA;YAAA;YAAA;UAAA,QAFR,eAUI;YAAQ,IAAI,EAAC,QAAb;YAAsB,OAAO,EAAEO,aAA/B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVJ;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA4BH,CA7BD,MA8BI;IACA,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ;;GAxFQZ,U;;KAAAA,U;AA0FT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}