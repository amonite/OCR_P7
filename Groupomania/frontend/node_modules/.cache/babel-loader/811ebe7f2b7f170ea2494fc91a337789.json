{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/showPosts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\"; //import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n//import {Link} from \"react-router-dom\";\n\nimport \"./showPosts_style.css\";\nimport jwt_decode from \"jwt-decode\";\n/* ======================================== */\n\n/* display all posts within a single thread */\n\n/* ======================================== */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowPosts(props) {\n  _s();\n\n  const isLoggedIn = props.isLoggedIn;\n  const [posts, setPosts] = useState([]);\n  /* ================================== */\n\n  /* get user info from session storage */\n\n  /* ================================== */\n\n  const token = JSON.parse(sessionStorage.getItem(\"mytoken\"));\n  let userId = \"\";\n  let isAdmin; //let userName;\n\n  if (token) {\n    const decodedToken = jwt_decode(token);\n    userId = decodedToken.userId;\n    isAdmin = decodedToken.isAdmin; //userName = decodedToken.email;\n  }\n\n  ;\n  /* ================================= */\n\n  /* fetch all posts from the database */\n\n  /* ================================= */\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      getAllPosts();\n    }\n  }, []);\n\n  function getAllPosts() {\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(data);\n      setPosts(data); // pass the data from the response to the state (var) posts \n\n      logImages(); // debug test \n    }).catch(error => console.log(\"error = \", error));\n  }\n  /* =========================== */\n\n  /* checks if user is logged in */\n\n  /* =========================== */\n\n\n  function isUserlogged() {\n    if (sessionStorage.length !== 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const userLogged = isUserlogged();\n  /* ============================= */\n\n  /* delete post from the database */\n\n  /* ============================= */\n\n  function deletePost(id) {\n    if (window.confirm(\"Voulez vous vraiment supprimer votre message ?\")) {\n      fetch(\"http://localhost:5000/api/posts/\" + id, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": \"Bearer \" + token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.message);\n        window.location.reload(true);\n      }).catch(error => console.log(\"error delete = \", error));\n    } else {\n      console.log(\"you canceled\");\n    }\n  }\n  /* ===================================================== */\n\n  /* check if there is an image to display for every post  */\n\n  /* ===================================================== */\n\n\n  function showImages() {\n    for (let i = 0; i < posts.length; i++) {\n      if (posts[i].imageUrl !== \"\") {\n        //console.log(`imageUrl = ${posts[i].imageUrl}`)\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  /* ======================== */\n\n  /* left here for debug only */\n\n  /* ======================== */\n\n\n  function logImages() {\n    for (let i = 0; i < posts.length; i++) {\n      console.log(`imageUrl = ${posts[i].imageUrl}`);\n    }\n  }\n  /* ==================================== */\n\n  /* check if user has liked/unliked post */\n\n  /* ==================================== */\n\n\n  async function likePost(id, usersLiked) {\n    let ulike = 0;\n\n    if (usersLiked.length !== 0) {\n      for (let i = 0; i < usersLiked.length; i++) {\n        if (userId === usersLiked[i]) {\n          ulike = 0; //console.log(`ulike 0 = ${ulike}`);\n        } else {\n          ulike = 1; //console.log(`ulike 1 = ${ulike}`);\n        }\n      }\n    } else {\n      ulike = 1;\n    }\n\n    const postObject = {\n      like: ulike,\n      userId: userId\n    }; //console.log(`postObject.like = ${postObject.like}`);\n\n    await fetch(\"http://localhost:5000/api/posts/\" + id + \"/like\", {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postObject)\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      //console.log(res.message);\n      refetchData();\n    }).catch(error => console.log(\"error delete = \", error));\n  }\n  /* ================================================================== */\n\n  /* refetch data is used to refresh page after user liked/unliked post */\n\n  /* ================================================================== */\n\n\n  async function refetchData() {\n    await getAllPosts();\n  }\n  /* ============================= */\n\n  /* check if post is being edited */\n\n  /* ============================= */\n\n\n  const [isEdited, setisEdited] = useState(false);\n  const [postId, setPostId] = useState('');\n  const [message, setMessage] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  function editPost(_postId) {\n    if (isEdited) {\n      setisEdited(false);\n    } else {\n      console.log(`post id from edited post = ${_postId}`);\n      setisEdited(true);\n      setPostId(_postId);\n    }\n  }\n  /* ================= */\n\n  /* editing of a post */\n\n  /* ================= */\n\n\n  function handleEditedMessage(_postId, _postMessage) {\n    let date = new Date();\n    let formdata = new FormData();\n    let postObject;\n    /* check if post message has been edited or not */\n\n    if (message === \"\") {\n      //alert(\"message vide\");\n      if (img !== null) {\n        postObject = {\n          message: _postMessage,\n          date: date.toString()\n        };\n        formdata.append(\"post\", JSON.stringify(postObject));\n        formdata.append(\"image\", img);\n      } else {\n        postObject = {\n          message: _postMessage,\n          imageUrl: \"\",\n          date: date.toString()\n        };\n        formdata.append(\"post\", JSON.stringify(postObject));\n      }\n    } else {\n      if (img !== null) {\n        postObject = {\n          message: message,\n          date: date.toString()\n        };\n        formdata.append(\"post\", JSON.stringify(postObject));\n        formdata.append(\"image\", img);\n      } else {\n        postObject = {\n          message: message,\n          imageUrl: \"\",\n          date: date.toString()\n        };\n        formdata.append(\"post\", JSON.stringify(postObject));\n      }\n    }\n\n    fetch(\"http://localhost:5000/api/posts/\" + _postId, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token //\"Content-Type\":\"application/json\"\n\n      },\n      //body: JSON.stringify({message})\n      body: formdata\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      //console.log(res.message);  \n      window.location = \"/\";\n    }).catch(error => console.log(\"error = \", error));\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: userLogged && posts.length != 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container-sub\",\n          children: posts.slice(0).reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post-author\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"auteur : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 64\n                }, this), post.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post-date\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"date : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 62\n                }, this), post.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-image\",\n                src: post.imageUrl,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-message\",\n              children: [isEdited === false && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 60\n              }, this), isEdited && (userId === post.userId || isAdmin === true) && postId === post._id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-message-edited\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"post-message-edited-textarea\" // rows = \"12\"\n                    // cols = \"80\"\n                    ,\n                    defaultValue: post.message,\n                    onChange: e => setMessage(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"post-message-edited-hud\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        name: \"image\",\n                        onChange: e => {\n                          setImg(e.target.files[0]);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"send-btn-edit\",\n                        onClick: () => {\n                          // showMessage()\n                          handleEditedMessage(post._id, post.message);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa-solid fa-xl fa-paper-plane fa-paper-plane-edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this), userId === post.userId || isAdmin === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-hud-edit\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-hud-edit-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    editPost(post._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-regular fa-xl fa-pen-to-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    deletePost(post._id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-xl fa-trash-can\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"likeContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-regular fa-xl fa-heart\",\n                  onClick: () => likePost(post._id, post.usersLiked),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-heart heart-back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"likeCounter\",\n                  children: post.likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postHud-other\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"likeContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-regular fa-xl fa-heart\",\n                  onClick: () => likePost(post._id, post.usersLiked),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-heart heart-back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"likeCounter\",\n                  children: post.likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 38\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Il n'y a aucun message \\xE0 afficher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(ShowPosts, \"vQ7UJ6iMAAyoshU4QFnzIh+aemA=\");\n\n_c = ShowPosts;\nexport default ShowPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPosts\");","map":{"version":3,"names":["useEffect","useState","jwt_decode","ShowPosts","props","isLoggedIn","posts","setPosts","token","JSON","parse","sessionStorage","getItem","userId","isAdmin","decodedToken","getAllPosts","fetch","method","headers","then","res","ok","json","data","console","log","logImages","catch","error","isUserlogged","length","userLogged","deletePost","id","window","confirm","message","location","reload","showImages","i","imageUrl","likePost","usersLiked","ulike","postObject","like","body","stringify","jsonResponse","refetchData","isEdited","setisEdited","postId","setPostId","setMessage","img","setImg","editPost","_postId","handleEditedMessage","_postMessage","date","Date","formdata","FormData","toString","append","slice","reverse","map","post","email","_id","e","target","value","files","likes"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/showPosts.js"],"sourcesContent":["import {useEffect} from \"react\";\nimport {useState} from \"react\";\n//import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n//import {Link} from \"react-router-dom\";\nimport \"./showPosts_style.css\";\nimport jwt_decode from \"jwt-decode\";\n\n/* ======================================== */\n/* display all posts within a single thread */\n/* ======================================== */\n\nfunction ShowPosts(props){\n    const isLoggedIn = props.isLoggedIn;\n    const [posts, setPosts] = useState([]);\n\n    /* ================================== */\n    /* get user info from session storage */\n    /* ================================== */\n\n    const token = JSON.parse(sessionStorage.getItem(\"mytoken\"));\n\n    let userId = \"\";\n    let isAdmin;\n    //let userName;\n\n    if(token){\n        const decodedToken = jwt_decode(token);\n        userId = decodedToken.userId;\n        isAdmin = decodedToken.isAdmin;\n        //userName = decodedToken.email;\n    };\n\n    /* ================================= */\n    /* fetch all posts from the database */\n    /* ================================= */\n    \n    useEffect(()=>{\n        if(isLoggedIn){\n        getAllPosts();\n        }\n    },[]);\n    \n    \n    function getAllPosts(){\n        fetch(\"http://localhost:5000/api/posts\",{\n            method: \"GET\",\n            headers: { \n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+token,\n            }\n        })\n        .then((res)=>{\n            if(res.ok){\n                return res.json();\n            }\n        })\n        .then((data)=>{\n            console.log(data);\n            setPosts(data);  // pass the data from the response to the state (var) posts \n            logImages(); // debug test \n        })\n        .catch(error => console.log(\"error = \", error));\n    } \n    \n    /* =========================== */\n    /* checks if user is logged in */\n    /* =========================== */\n\n    function isUserlogged(){\n       \n        if(sessionStorage.length !==0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n\n    const userLogged = isUserlogged();\n\n    /* ============================= */\n    /* delete post from the database */\n    /* ============================= */\n\n    function deletePost(id){\n\n        if(window.confirm(\"Voulez vous vraiment supprimer votre message ?\")){\n\n            fetch(\"http://localhost:5000/api/posts/\"+id,{\n                method: \"DELETE\",\n                headers: {\n                    \"Authorization\":\"Bearer \"+token,\n                    \"Content-Type\":\"application/json\"\n                }\n            })\n            .then((res)=>{\n                    console.log(res.message)\n                    window.location.reload(true);\n\n            })\n            .catch(error => console.log(\"error delete = \", error))\n\n        }\n        else{\n            console.log(\"you canceled\");\n        }\n\n    }\n\n    /* ===================================================== */\n    /* check if there is an image to display for every post  */\n    /* ===================================================== */\n\n    function showImages(){\n        for(let i=0;i<posts.length;i++){\n            if(posts[i].imageUrl !==\"\"){\n                //console.log(`imageUrl = ${posts[i].imageUrl}`)\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n    }\n\n    /* ======================== */\n    /* left here for debug only */\n    /* ======================== */\n\n    function logImages(){\n        for(let i=0;i<posts.length;i++){\n                console.log(`imageUrl = ${posts[i].imageUrl}`);      \n        }\n    }\n\n    /* ==================================== */\n    /* check if user has liked/unliked post */\n    /* ==================================== */\n\n    async function likePost(id,usersLiked){\n     \n        let ulike = 0;\n        \n        if(usersLiked.length !==0){\n            for(let i=0;i<usersLiked.length;i++){\n                \n                if(userId===usersLiked[i]){\n                    ulike = 0;\n                    //console.log(`ulike 0 = ${ulike}`);\n                }\n                else{\n                    ulike = 1;\n                    //console.log(`ulike 1 = ${ulike}`);\n                }\n            }\n        }\n        else{\n            ulike = 1;\n        }\n        \n        const postObject = {\n            like: ulike,\n            userId: userId\n        }\n\n        //console.log(`postObject.like = ${postObject.like}`);\n\n        await fetch(\"http://localhost:5000/api/posts/\"+id+\"/like\",{\n            method: \"PUT\",\n            headers: {\n                \"Authorization\":\"Bearer \"+token,\n                \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify(postObject)\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            //console.log(res.message);\n            refetchData();\n            \n        })\n        .catch(error => console.log(\"error delete = \", error))\n\n    }\n\n    /* ================================================================== */\n    /* refetch data is used to refresh page after user liked/unliked post */\n    /* ================================================================== */\n\n    async function refetchData(){\n        await getAllPosts();\n    }\n\n    /* ============================= */\n    /* check if post is being edited */\n    /* ============================= */\n\n    const [isEdited,setisEdited] = useState(false);\n    const [postId, setPostId] = useState('');\n    const [message, setMessage] = useState(\"\");\n    const [img, setImg] = useState(null);\n       \n    function editPost(_postId){\n            if(isEdited){\n                setisEdited(false)\n            }\n            else{\n            console.log(`post id from edited post = ${_postId}`);\n            setisEdited(true);\n            setPostId(_postId);\n            }\n    }\n\n    /* ================= */\n    /* editing of a post */\n    /* ================= */\n\n    function handleEditedMessage(_postId, _postMessage){\n\n        let date = new Date();\n        let formdata = new FormData();\n        let postObject;\n\n        /* check if post message has been edited or not */\n        if(message === \"\"){\n            //alert(\"message vide\");\n            if(img !==null){\n                postObject = {\n                    message:_postMessage,\n                    date:date.toString()\n                }\n                formdata.append(\"post\", JSON.stringify(postObject));\n                formdata.append(\"image\", img);\n            }\n            else{\n                postObject = {\n                    message:_postMessage,\n                    imageUrl:\"\",\n                    date:date.toString()\n                }\n                formdata.append(\"post\", JSON.stringify(postObject));\n            }\n\n        }\n        else{\n            if(img !==null){\n                postObject = {\n                    message:message,\n                    date:date.toString()\n                }\n                formdata.append(\"post\", JSON.stringify(postObject));\n                formdata.append(\"image\", img);\n            }\n            else{\n                postObject = {\n                    message:message,\n                    imageUrl:\"\",\n                    date:date.toString(),\n\n                }\n                formdata.append(\"post\", JSON.stringify(postObject));\n            }\n        }\n        \n    \n        fetch(\"http://localhost:5000/api/posts/\"+_postId,{\n            method: \"PUT\",\n\n            headers:{\n                \"Authorization\":\"Bearer \"+token,\n                //\"Content-Type\":\"application/json\"\n            },\n            //body: JSON.stringify({message})\n            body:formdata\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            //console.log(res.message);  \n            window.location= \"/\";\n        })\n    \n        .catch(error => console.log(\"error = \", error));\n\n    }\n    if(isLoggedIn){\n    return(\n        \n        <div className=\"main-container\">\n            {/* <h1>Messages</h1> */}\n            {/* <div>\n            {posts.map((post)=> (\n                <p>{post.message}</p>\n            ))}\n\n            </div> */}\n            <div className=\"post-container\">\n                {userLogged && posts.length !=0 ? \n                    (<div className=\"post-container-sub\">\n                        {posts.slice(0).reverse().map((post)=> (\n                            <div className=\"post\" key={post._id}>\n                                <div className=\"post-info\">\n                                    <p className=\"post-author\"><b>auteur : </b>{post.email}</p>\n                                    <p className=\"post-date\"><b>date : </b>{post.date}</p>\n                                </div>\n                                {/* {showImages() ? \n                                   \n                                    (\n                                    <div className=\"post-image-container\">\n                                        <img className=\"post-image\"src={post.imageUrl} alt=\"\"></img>\n                                    </div>\n                                    )\n                                    \n                                :\n                                (<div className=\"post-noImage\"></div>)\n                                } */}\n                                <div className=\"post-image-container\">\n                                    <img className=\"post-image\"src={post.imageUrl} alt=\"\"></img>\n                                </div>\n                             \n                                <div className=\"post-message\">\n                                    {/* <p>{post.message}</p> */}\n                                    {isEdited === false && <p>{post.message}</p>}\n                                    {((isEdited && ((userId === post.userId) || (isAdmin === true) )) && (postId === post._id)) && (\n                                        <div className=\"post-message-edited\">\n                                            <form>\n\n                                                <textarea \n                                                    className=\"post-message-edited-textarea\"\n                                                    // rows = \"12\"\n                                                    // cols = \"80\"\n                                                    defaultValue = {post.message}\n                                                    onChange = {(e)=> setMessage(e.target.value)}\n                                                    \n                                                >  \n                                                \n                                                </textarea>\n                                                <div className=\"post-message-edited-hud\">\n                                                    <div>\n                                                        <input type=\"file\" \n                                                            name=\"image\"\n                                                            onChange={(e)=>{\n                                                                    setImg(e.target.files[0]);\n                                                            }}\n                                                        >\n                                                        </input>\n                                                        {/* <label htmlFor=\"file-input\" className=\"file-input-label\">\n                                                            <i className=\"fa-solid fa-xl fa-paperclip\"></i>\n                                \n                                                        </label>\n                                                        <input\n                                                            className=\"file-input\"\n                                                            id=\"file-input\" \n                                                            type=\"file\"\n                                                            name=\"image\"\n                                                            onChange={(e)=>{\n                                                                console.log(\"target = \", e.target.files[0]);\n                                                                setImg(e.target.files[0]);\n\n                                                                const[file] = e.target.files;\n                                                                const {name: fileName, size } = file;\n                                                                const fileSize = (size/1000).toFixed(2);\n                                                                const fileNameAndSize = `${fileName} - ${fileSize}KB`;\n                                                                document.querySelector(\".file-name\").textContent = fileNameAndSize;\n                                                                //setTimeout(function(){console.log(\"img = \", img)}, 1000); // debug\n                                                            }}\n                                                        ></input> */}\n                                                    </div>\n                                                    <div>\n                                                        <button type=\"button\" className=\"send-btn-edit\" onClick={()=>{\n                                                            // showMessage()\n                                                            handleEditedMessage(post._id, post.message)\n                                                            }\n                                                        }>\n                                                            <i className=\"fa-solid fa-xl fa-paper-plane fa-paper-plane-edit\"></i>\n                                                        </button>\n                                                    </div>\n                                                    {/* <p className=\"file-name\"></p> */}\n                                                </div>\n                                                \n                                            </form>\n                                        </div>\n                                    )}\n                                </div>\n                                {/* <p>identifiant du message :{post._id}</p> */}\n                                {/* <p className=\"post-author\">auteur : {post.email}</p> */}\n\n                                {(userId === post.userId) || (isAdmin === true) ? \n                                    (<div className=\"post-hud-edit\">\n                                        <div className=\"post-hud-edit-buttons\">\n                                            {/* <Link to={`/editPost/${post._id}`}><i className=\"fa-regular fa-xl fa-pen-to-square\"></i></Link> */}\n                                            <button type=\"button\" \n                                                    onClick={()=>{\n                                                        editPost(post._id)\n                                                    }}>\n                                                    <i className=\"fa-regular fa-xl fa-pen-to-square\"></i>\n                                            </button>\n                                            <button type=\"button\" \n                                                    onClick={()=> {\n                                                        deletePost(post._id)\n                                                    }}>\n                                                    <i className=\"fa-solid fa-xl fa-trash-can\"></i>\n                                            </button>\n                                        </div>\n                                        <div className=\"likeContainer\">\n                                            <i className=\"fa-regular fa-xl fa-heart\" onClick={()=>likePost(post._id, post.usersLiked)}>\n                                                <i className=\"fa-solid fa-heart heart-back\"></i>\n                                            </i>\n                                            <div className=\"likeCounter\">\n                                                {post.likes}\n                                            </div>\n                                        </div>\n                                    </div>)\n                                    :\n                                    (<div className=\"postHud-other\">\n                                        <div className=\"likeContainer\">\n                                            <i className=\"fa-regular fa-xl fa-heart\" onClick={()=>likePost(post._id, post.usersLiked)}>\n                                                <i className=\"fa-solid fa-heart heart-back\"></i>\n                                            </i>\n                                            <div className=\"likeCounter\">{post.likes}</div>\n                                        </div>\n                                    </div>)} \n                            </div>\n                        ))}\n                    </div>)\n                    :\n                    (<div>\n                        <p>Il n'y a aucun message à afficher</p>\n                    </div>)}\n            </div>\n        </div>\n                    \n    );\n    }\n}\n\nexport default ShowPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}