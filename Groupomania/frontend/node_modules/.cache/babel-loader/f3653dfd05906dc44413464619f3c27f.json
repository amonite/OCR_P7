{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/showPosts.js\",\n    _s = $RefreshSig$();\n\n//import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./showPosts_style.css\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowPosts() {\n  _s();\n\n  //const token = useContext(UlogCtx);\n  //let count = useContext(UlogCtx);\n  const [posts, setPosts] = useState([]);\n  const token = JSON.parse(localStorage.getItem(\"mytoken\")); //const userId = localStorage.getItem(\"userId\");\n\n  let userId = \"\";\n  let isAdmin;\n  let userName;\n\n  if (token) {\n    const decodedToken = jwt_decode(token);\n    userId = decodedToken.userId;\n    isAdmin = decodedToken.isAdmin;\n    userName = decodedToken.email;\n  }\n\n  ; // const decodedToken = parseJwt(token);\n  //console.log(`decoded token = ${decodedToken}`);\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  function getAllPosts() {\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(data);\n      setPosts(data); // pass the data from the response to the state (var) posts \n      //logImages();\n    }).catch(error => console.log(\"error = \", error));\n  }\n\n  function isUserlogged() {\n    // if(token){\n    //     return true;\n    // }\n    // else{\n    //     return false;\n    // }\n    if (localStorage.length !== 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const userLogged = isUserlogged();\n\n  function deletePost(id) {\n    if (window.confirm(\"Voulez vous vraiment supprimer votre message ?\")) {\n      fetch(\"http://localhost:5000/api/posts/\" + id, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": \"Bearer \" + token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.message);\n        window.location.reload(true);\n      }).catch(error => console.log(\"error delete = \", error));\n    } else {\n      console.log(\"you canceled\");\n    }\n  }\n\n  function showImages() {\n    for (let i = 0; i < posts.length; i++) {\n      if (posts[i].imageUrl !== \"\") {\n        console.log(`imageUrl = ${posts[i].imageUrl}`);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  } // function logImages(){\n  //     for(let i=0;i<posts.length;i++){\n  //             console.log(`imageUrl = ${posts[i].imageUrl}`);\n  //     }\n  // }\n\n\n  async function likePost(id, usersLiked) {\n    let ulike = 0;\n\n    if (usersLiked.length !== 0) {\n      for (let i = 0; i < usersLiked.length; i++) {\n        if (userId === usersLiked[i]) {\n          ulike = 0;\n          console.log(`ulike 0 = ${ulike}`);\n        } else {\n          ulike = 1;\n          console.log(`ulike 1 = ${ulike}`);\n        }\n      }\n    } else {\n      ulike = 1;\n    }\n\n    const postObject = {\n      like: ulike,\n      userId: userId\n    };\n    console.log(`postObject.like = ${postObject.like}`);\n    await fetch(\"http://localhost:5000/api/posts/\" + id + \"/like\", {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postObject)\n    }) // .then((res)=>{\n    //     console.log(res.message)\n    //     //window.location.reload(true);\n    //  })\n    .then(jsonResponse => jsonResponse.json()).then(res => {\n      console.log(res.message); //getAllPosts();\n\n      refetchData(); //window.location=\"/\";\n    }).catch(error => console.log(\"error delete = \", error));\n  }\n\n  async function refetchData() {\n    await getAllPosts();\n  }\n\n  const [isEdited, setisEdited] = useState();\n  const [postId, setPostId] = useState('');\n  const [message, setMessage] = useState(\"\");\n\n  function editPost(_postId) {\n    if (isEdited) {\n      setisEdited(false);\n    } else {\n      console.log(`post id from edt post = ${_postId}`);\n      setisEdited(true);\n      setPostId(_postId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postContainer\",\n      children: userLogged ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.slice(0).reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [showImages() ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post-image\",\n            src: post.imageUrl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-noImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-message\",\n            children: [isEdited == false && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 59\n            }, this), isEdited && (userId === post.userId || isAdmin === true) && postId === post._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                defaultValue: post.message,\n                onChange: e => setMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"auteur :\", post.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this), userId === post.userId || isAdmin === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postHud-owner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postHud-owner-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  editPost(post._id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-regular fa-xl fa-pen-to-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  deletePost(post._id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-xl fa-trash-can\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"likeContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-regular fa-xl fa-heart\",\n                onClick: () => likePost(post._id, post.usersLiked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"likeCounter\",\n                children: post.likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postHud-other\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"likeContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-regular fa-xl fa-heart\",\n                onClick: () => likePost(post._id, post.usersLiked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"likeCounter\",\n                children: post.likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 38\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"deconnect\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowPosts, \"/8Z4PEXrji0JKV4uqCEoTFzNhuY=\");\n\n_c = ShowPosts;\nexport default ShowPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPosts\");","map":{"version":3,"names":["useEffect","useState","Link","jwt_decode","ShowPosts","posts","setPosts","token","JSON","parse","localStorage","getItem","userId","isAdmin","userName","decodedToken","email","getAllPosts","fetch","method","headers","then","res","ok","json","data","console","log","catch","error","isUserlogged","length","userLogged","deletePost","id","window","confirm","message","location","reload","showImages","i","imageUrl","likePost","usersLiked","ulike","postObject","like","body","stringify","jsonResponse","refetchData","isEdited","setisEdited","postId","setPostId","setMessage","editPost","_postId","slice","reverse","map","post","_id","e","target","value","likes"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/showPosts.js"],"sourcesContent":["//import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\nimport {useEffect} from \"react\";\nimport {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nimport \"./showPosts_style.css\";\nimport jwt_decode from \"jwt-decode\";\n\nfunction ShowPosts(){\n    \n    //const token = useContext(UlogCtx);\n    //let count = useContext(UlogCtx);\n    const [posts, setPosts] = useState([]);\n\n    const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n    //const userId = localStorage.getItem(\"userId\");\n    let userId = \"\";\n    let isAdmin;\n    let userName;\n    if(token){\n        const decodedToken = jwt_decode(token);\n        userId = decodedToken.userId;\n        isAdmin = decodedToken.isAdmin;\n        userName = decodedToken.email;\n    };\n\n   // const decodedToken = parseJwt(token);\n\n    //console.log(`decoded token = ${decodedToken}`);\n\n    useEffect(()=>{\n        getAllPosts();\n    },[]);\n    \n    function getAllPosts(){\n        fetch(\"http://localhost:5000/api/posts\",{\n            method: \"GET\",\n            headers: { \n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+token,\n            }\n        })\n        .then((res)=>{\n            if(res.ok){\n                return res.json();\n            }\n        })\n        .then((data)=>{\n            console.log(data);\n            setPosts(data);  // pass the data from the response to the state (var) posts \n            //logImages();\n        })\n        .catch(error => console.log(\"error = \", error));\n    } \n    \n\n    function isUserlogged(){\n        // if(token){\n        //     return true;\n        // }\n        // else{\n        //     return false;\n        // }\n        if(localStorage.length !==0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n\n    const userLogged = isUserlogged();\n\n   \n\n\n    function deletePost(id){\n\n        if(window.confirm(\"Voulez vous vraiment supprimer votre message ?\")){\n\n            fetch(\"http://localhost:5000/api/posts/\"+id,{\n                method: \"DELETE\",\n                headers: {\n                    \"Authorization\":\"Bearer \"+token,\n                    \"Content-Type\":\"application/json\"\n                }\n            })\n            .then((res)=>{\n                    console.log(res.message)\n                    window.location.reload(true);\n\n            })\n            .catch(error => console.log(\"error delete = \", error))\n\n        }\n        else{\n            console.log(\"you canceled\");\n        }\n\n    }\n\n    function showImages(){\n        for(let i=0;i<posts.length;i++){\n            if(posts[i].imageUrl !==\"\"){\n                console.log(`imageUrl = ${posts[i].imageUrl}`)\n                return true;\n\n            }\n            else{\n                return false;\n            }\n        }\n    }\n\n    // function logImages(){\n    //     for(let i=0;i<posts.length;i++){\n            \n    //             console.log(`imageUrl = ${posts[i].imageUrl}`);\n           \n    //     }\n    // }\n\n    \n\n    async function likePost(id,usersLiked){\n     \n        let ulike = 0;\n        \n        if(usersLiked.length !==0){\n            for(let i=0;i<usersLiked.length;i++){\n                \n                if(userId===usersLiked[i]){\n                    ulike = 0;\n                    console.log(`ulike 0 = ${ulike}`);\n                }\n                else{\n                    ulike = 1;\n                    console.log(`ulike 1 = ${ulike}`);\n\n                }\n            }\n        }\n        else{\n        \n            ulike = 1;\n        }\n        \n        const postObject = {\n            like: ulike,\n            userId: userId\n        }\n\n        console.log(`postObject.like = ${postObject.like}`);\n\n        await fetch(\"http://localhost:5000/api/posts/\"+id+\"/like\",{\n            method: \"PUT\",\n            headers: {\n                \"Authorization\":\"Bearer \"+token,\n                \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify(postObject)\n        })\n        // .then((res)=>{\n        //     console.log(res.message)\n        //     //window.location.reload(true);\n\n        //  })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            console.log(res.message);\n            //getAllPosts();\n            refetchData();\n            //window.location=\"/\";\n        })\n        .catch(error => console.log(\"error delete = \", error))\n\n    }\n\n   async function refetchData(){\n        await getAllPosts();\n   }\n\n   const [isEdited,setisEdited] = useState();\n   const [postId, setPostId] = useState('');\n   const [message, setMessage] = useState(\"\");\n\n   function editPost(_postId){\n        if(isEdited){\n            setisEdited(false)\n        }\n        else{\n        console.log(`post id from edt post = ${_postId}`);\n        setisEdited(true);\n        setPostId(_postId);\n        }\n   }\n\n    return(\n        <div>\n            {/* <h1>Messages</h1> */}\n            {/* <div>\n            {posts.map((post)=> (\n                <p>{post.message}</p>\n            ))}\n\n            </div> */}\n            <div className=\"postContainer\">\n                {userLogged ? \n                    (<div>\n                        {posts.slice(0).reverse().map((post)=> (\n                            <div className=\"post\" key={post._id}>\n                                {showImages() ? \n                                    (<img className=\"post-image\"src={post.imageUrl} alt=\"\"></img>)\n                                :\n                                (<div className=\"post-noImage\"></div>)\n                                }\n                                {/* <img className=\"post-images\"src={post.imageUrl} alt=\"\"></img> */}\n                                <div className=\"post-message\">\n                                    {isEdited == false && <p>{post.message}</p>}\n                                    {((isEdited && ((userId === post.userId) || (isAdmin === true) )) && (postId === post._id)) && (\n                                        <div>\n                                            <textarea\n                                                defaultValue={post.message}\n                                                onChange={(e)=> setMessage(e.target.value)}\n                                            >\n                                                \n                                            </textarea>\n                                        </div>\n                                    )}\n                                </div>\n                                {/* <p>identifiant du message :{post._id}</p> */}\n                                <p>auteur :{post.email}</p>\n\n                                {(userId === post.userId) || (isAdmin === true) ? \n                                    (<div className=\"postHud-owner\">\n                                        <div className=\"postHud-owner-actions\">\n                                            {/* <Link to={`/editPost/${post._id}`}><i className=\"fa-regular fa-xl fa-pen-to-square\"></i></Link> */}\n                                            <button type=\"button\" \n                                                    onClick={()=>{\n                                                        editPost(post._id)\n                                                    }}>\n                                                    <i className=\"fa-regular fa-xl fa-pen-to-square\"></i>\n                                            </button>\n                                            <button type=\"button\" \n                                                    onClick={()=> {\n                                                        deletePost(post._id)\n                                                    }}>\n                                                    <i className=\"fa-solid fa-xl fa-trash-can\"></i>\n                                            </button>\n                                        </div>\n                                        <div className=\"likeContainer\">\n                                            <i className=\"fa-regular fa-xl fa-heart\" onClick={()=>likePost(post._id, post.usersLiked)}></i>\n                                            <div className=\"likeCounter\">\n                                                {post.likes}\n                                            </div>\n                                        </div>\n                                    </div>)\n                                    :\n                                    (<div className=\"postHud-other\">\n                                        <div className=\"likeContainer\">\n                                            <i className=\"fa-regular fa-xl fa-heart\" onClick={()=>likePost(post._id, post.usersLiked)}></i>\n                                            <div className=\"likeCounter\">{post.likes}</div>\n                                        </div>\n                                    </div>)} \n                            </div>\n                        ))}\n                    </div>)\n                    :\n                    (<div>deconnecté</div>)}\n            </div>\n        </div>\n    );\n}\n\nexport default ShowPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}