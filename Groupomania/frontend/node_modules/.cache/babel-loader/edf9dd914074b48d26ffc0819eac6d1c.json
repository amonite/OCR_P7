{"ast":null,"code":"var _jsxFileName = \"/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/newMessage.js\",\n    _s = $RefreshSig$();\n\nimport \"./newMessage_style.css\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\"; //import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMessage(props) {\n  _s();\n\n  const isLoggedIn = props.isLoggedIn; // const [message, setMessage] = useState(\"\");\n  // const [img, setImg] = useState(null);\n  //const token = useContext(UlogCtx);\n\n  const token = JSON.parse(localStorage.getItem(\"mytoken\")); //const formData = document.getElementById(\"imgForm\");\n  // function handleMessage(){\n  //     //console.log({message});\n  //     //console.log(\"img = \", img);\n  //     // let data = new FormData();\n  //     // data.append(\"message\",message);\n  //     // data.append(\"imageUrl\",img);\n  //     // console.log(\"data = \", data);\n  //     // let data = {\n  //     //     message:message\n  //     // }\n  //     // let myjson = JSON.stringify(data)\n  //     // console.log(\"myjson = \"+ myjson);\n  //     // let testParse = JSON.parse(myjson)\n  //     // console.log(\"test parse = \", testParse);\n  //     console.log(\"img depuis handleMessage = \", img);\n  //     const datax = new FormData(document.getElementById(\"imgForm\"));\n  //     console.log(\"datax = \", datax);\n  //     fetch(\"http://localhost:5000/api/posts\",{\n  //         method: \"POST\",\n  //         headers: {\n  //             \"Authorization\":\"Bearer \"+token,\n  //             //\"Content-Type\":\"application/json\"\n  //             //\"Content-Type\": \"multipart/form-data\"\n  //         },\n  //         //body:myjson\n  //         //body: JSON.stringify(data)\n  //         //body: JSON.stringify({message:message})\n  //         //body: JSON.stringify({message:message, imageUrl:img})\n  //         //body: data\n  //         //body:new FormData(document.getElementById(\"imgForm\"))\n  //         body: datax\n  //     })\n  //     .then(jsonResponse => jsonResponse.json())\n  //     .then((res)=>{\n  //         console.log(res.message)\n  //         window.location = \"/\";\n  //     })\n  //     .catch(error => console.log(\"error = \", error));\n  // }\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onformSubmit = data => {\n    console.log(\"new data =\", data);\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n        \"Content-Type\": \"application/json\" //\"Content-Type\": \"multipart/form-data\"\n\n      },\n      body: new FormData(data)\n    }).then(jsonResponse => jsonResponse.json()).then(res => {\n      console.log(res.message);\n      window.location = \"/\";\n    }).catch(error => console.log(\"error = \", error));\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nouveau message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onformSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Enter Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"12\",\n          cols: \"80\",\n          id: \"message\",\n          name: \"message\",\n          ...register(\"message\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Ajouter une image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          ...register(\"image\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Vous de devez vous connecter pour envoyer un message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(NewMessage, \"NjVFHIUhmagC05owgN/Fcjw0icU=\", false, function () {\n  return [useForm];\n});\n\n_c = NewMessage;\nexport default NewMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["useState","useForm","NewMessage","props","isLoggedIn","token","JSON","parse","localStorage","getItem","register","handleSubmit","formState","errors","onformSubmit","data","console","log","fetch","method","headers","body","FormData","then","jsonResponse","json","res","message","window","location","catch","error"],"sources":["/home/ben/Dev/Depo/web/P7/Groupomania/frontend/src/components/Post/newMessage.js"],"sourcesContent":["import \"./newMessage_style.css\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n//import {useContext} from \"react\";\n//import { UlogCtx } from \"../appContext\";\n\nfunction NewMessage(props){\n    const isLoggedIn = props.isLoggedIn;\n    // const [message, setMessage] = useState(\"\");\n    // const [img, setImg] = useState(null);\n    //const token = useContext(UlogCtx);\n\n    const token = JSON.parse(localStorage.getItem(\"mytoken\"));\n\n    //const formData = document.getElementById(\"imgForm\");\n\n    // function handleMessage(){\n    //     //console.log({message});\n    //     //console.log(\"img = \", img);\n    \n    //     // let data = new FormData();\n    //     // data.append(\"message\",message);\n    //     // data.append(\"imageUrl\",img);\n    //     // console.log(\"data = \", data);\n    //     // let data = {\n    //     //     message:message\n    //     // }\n    //     // let myjson = JSON.stringify(data)\n    //     // console.log(\"myjson = \"+ myjson);\n    //     // let testParse = JSON.parse(myjson)\n    //     // console.log(\"test parse = \", testParse);\n    //     console.log(\"img depuis handleMessage = \", img);\n    //     const datax = new FormData(document.getElementById(\"imgForm\"));\n\n    //     console.log(\"datax = \", datax);\n\n    //     fetch(\"http://localhost:5000/api/posts\",{\n    //         method: \"POST\",\n    //         headers: {\n\n    //             \"Authorization\":\"Bearer \"+token,\n    //             //\"Content-Type\":\"application/json\"\n    //             //\"Content-Type\": \"multipart/form-data\"\n    //         },\n    //         //body:myjson\n    //         //body: JSON.stringify(data)\n    //         //body: JSON.stringify({message:message})\n    //         //body: JSON.stringify({message:message, imageUrl:img})\n    //         //body: data\n    //         //body:new FormData(document.getElementById(\"imgForm\"))\n    //         body: datax\n    //     })\n    //     .then(jsonResponse => jsonResponse.json())\n    //     .then((res)=>{\n    //         console.log(res.message)\n    //         window.location = \"/\";\n    //     })\n    //     .catch(error => console.log(\"error = \", error));\n\n    // }\n    \n    const {\n        register,\n        handleSubmit,\n        formState:{errors},\n    } = useForm();\n\n    const onformSubmit = (data) =>{\n        console.log(\"new data =\",data);\n        \n        fetch(\"http://localhost:5000/api/posts\",{\n        method: \"POST\",\n        headers: {\n\n            \"Authorization\":\"Bearer \"+token,\n            \"Content-Type\":\"application/json\"\n            //\"Content-Type\": \"multipart/form-data\"\n        },\n        \n        body: new FormData(data)\n        })\n        .then(jsonResponse => jsonResponse.json())\n        .then((res)=>{\n            console.log(res.message)\n            window.location = \"/\";\n        })\n        .catch(error => console.log(\"error = \", error));\n    };\n   \n\n    if(isLoggedIn){\n        return(\n            <div>\n                <h2>Nouveau message</h2>\n                <form onSubmit={handleSubmit(onformSubmit)}>\n                    <label htmlFor=\"message\">Enter Message</label>\n                    <textarea rows=\"12\" cols=\"80\" id=\"message\" name=\"message\" {...register(\"message\")}></textarea>\n                    \n                    <label htmlFor=\"image\">Ajouter une image</label>\n                    <input type=\"file\" name=\"image\" {...register(\"image\")}></input>\n\n                    <button>Send data</button>\n                </form>\n                {/* <form id=\"imgForm\">\n                    <textarea \n                        name=\"message\"\n                        rows=\"12\" \n                        cols=\"80\" \n                        onChange={(e)=> {setMessage(e.target.value)}}\n                        value={message}\n                        >\n                        \n                    </textarea>\n                    <div className=\"message-hud\">\n                        \n                            <input type=\"file\"\n                            name=\"image\"\n                            onChange={(e)=>{\n                                console.log(\"target = \", e.target.files[0]);\n                                setImg(e.target.files[0]);\n                                setTimeout(function(){console.log(\"img = \", img)}, 1000); \n                            }}\n                            ></input>\n                        \n                        <button type=\"button\" onClick={handleMessage}>Envoyer</button>\n                        \n                    </div>\n                </form> */}\n                \n            </div>\n        )\n    }\n    else{\n        return(\n            <div>Vous de devez vous connecter pour envoyer un message</div>\n        )\n    }\n}\n\nexport default NewMessage;"],"mappings":";;;AAAA,OAAO,wBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CACA;AACA;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAA;;EACtB,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB,CADsB,CAEtB;EACA;EACA;;EAEA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAd,CANsB,CAQtB;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,MAAM;IACFC,QADE;IAEFC,YAFE;IAGFC,SAAS,EAAC;MAACC;IAAD;EAHR,IAIFZ,OAAO,EAJX;;EAMA,MAAMa,YAAY,GAAIC,IAAD,IAAS;IAC1BC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,IAAzB;IAEAG,KAAK,CAAC,iCAAD,EAAmC;MACxCC,MAAM,EAAE,MADgC;MAExCC,OAAO,EAAE;QAEL,iBAAgB,YAAUf,KAFrB;QAGL,gBAAe,kBAHV,CAIL;;MAJK,CAF+B;MASxCgB,IAAI,EAAE,IAAIC,QAAJ,CAAaP,IAAb;IATkC,CAAnC,CAAL,CAWCQ,IAXD,CAWMC,YAAY,IAAIA,YAAY,CAACC,IAAb,EAXtB,EAYCF,IAZD,CAYOG,GAAD,IAAO;MACTV,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,OAAhB;MACAC,MAAM,CAACC,QAAP,GAAkB,GAAlB;IACH,CAfD,EAgBCC,KAhBD,CAgBOC,KAAK,IAAIf,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBc,KAAxB,CAhBhB;EAiBH,CApBD;;EAuBA,IAAG3B,UAAH,EAAc;IACV,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,QAAQ,EAAEO,YAAY,CAACG,YAAD,CAA5B;QAAA,wBACI;UAAO,OAAO,EAAC,SAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAU,IAAI,EAAC,IAAf;UAAoB,IAAI,EAAC,IAAzB;UAA8B,EAAE,EAAC,SAAjC;UAA2C,IAAI,EAAC,SAAhD;UAAA,GAA8DJ,QAAQ,CAAC,SAAD;QAAtE;UAAA;UAAA;UAAA;QAAA,QAFJ,eAII;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,OAAxB;UAAA,GAAoCA,QAAQ,CAAC,OAAD;QAA5C;UAAA;UAAA;UAAA;QAAA,QALJ,eAOI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAwCH,CAzCD,MA0CI;IACA,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ;;GAnIQR,U;UA2DDD,O;;;KA3DCC,U;AAqIT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}